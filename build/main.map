{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\""],"names":["express","require","cors","mongoose","bcrypt","jwt","bodyParser","app","PORT","use","json","connect","userSchema","Schema","username","String","password","role","type","default","postSchema","title","content","author","Types","ObjectId","ref","comments","commentSchema","post","subredditSchema","name","description","moderators","posts","Subreddit","model","Post","Comment","User","authenticateToken","req","res","next","tokenHeader","headers","authorization","token","split","status","message","decoded","verify","process","env","JWT_SECRET","user","error","get","send","hashedPassword","hash","body","save","sendStatus","findOne","validPassword","compare","sign","expiresIn","console","log","_id","subreddit","subredditId","params","findById","push","delete","deleteMany","$in","deleteOne","put","postId","remove","comment","listen"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst mongoose = require(\"mongoose\");\r\nconst bcrypt = require(\"bcrypt\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst bodyParser = require(\"body-parser\");\r\n\r\nconst app = express();\r\nconst PORT = 6969;\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\nmongoose.connect(\"mongodb://localhost:27017/reddit_clone\");\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  username: String,\r\n  password: String,\r\n  role: { type: String, default: \"user\" },\r\n});\r\n\r\nconst postSchema = new mongoose.Schema({\r\n  title: String,\r\n  content: String,\r\n  author: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" },\r\n  comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\r\n});\r\n\r\nconst commentSchema = new mongoose.Schema({\r\n  content: String,\r\n  author: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" },\r\n  post: { type: mongoose.Schema.Types.ObjectId, ref: \"Post\" },\r\n});\r\n\r\nconst subredditSchema = new mongoose.Schema({\r\n  name: String,\r\n  description: String,\r\n  moderators: [{ type: mongoose.Schema.Types.ObjectId, ref: \"User\" }],\r\n  posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\r\n});\r\n\r\nconst Subreddit = mongoose.model(\"Subreddit\", subredditSchema);\r\nconst Post = mongoose.model(\"Post\", postSchema);\r\nconst Comment = mongoose.model(\"Comment\", commentSchema);\r\nconst User = mongoose.model(\"User\", userSchema);\r\n\r\nconst authenticateToken = (req, res, next) => {\r\n  const tokenHeader = req.headers.authorization;\r\n  const token = tokenHeader.split(\" \")[1];\r\n\r\n  if (!token) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: \"Accès non autorisé. Token manquant.\" });\r\n  }\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n    req.user = decoded.user;\r\n    next();\r\n  } catch (error) {\r\n    res.status(401).json({ message: \"Token invalide.\" });\r\n  }\r\n};\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.send(\"Welcome to the Reddit Clone API!\");\r\n});\r\n\r\napp.post(\"/register\", async (req, res) => {\r\n  try {\r\n    const hashedPassword = await bcrypt.hash(req.body.password, 10);\r\n    const user = new User({\r\n      username: req.body.username,\r\n      password: hashedPassword,\r\n    });\r\n    await user.save();\r\n    res.sendStatus(201);\r\n  } catch (error) {\r\n    res.sendStatus(500);\r\n  }\r\n});\r\n\r\napp.post(\"/login\", async (req, res) => {\r\n  const user = await User.findOne({ username: req.body.username });\r\n  if (!user) return res.status(400).send(\"Utilisateur non trouvé\");\r\n\r\n  const validPassword = await bcrypt.compare(req.body.password, user.password);\r\n  if (!validPassword) return res.status(400).send(\"Mot de passe incorrect\");\r\n\r\n  const token = jwt.sign({ user }, \"your-secret-key\", { expiresIn: \"7d\" });\r\n  res.json({ token });\r\n});\r\n\r\napp.post(\"/create-subreddit\", authenticateToken, async (req, res) => {\r\n  try {\r\n    console.log(\"Request User ID:\", req.user._id);\r\n    const { name, description } = req.body;\r\n    const subreddit = new Subreddit({\r\n      name,\r\n      description,\r\n      moderators: [req.user._id],\r\n    });\r\n\r\n    await subreddit.save();\r\n    console.log(\"Subreddit Created:\", subreddit);\r\n    res.status(201).json(subreddit);\r\n  } catch (error) {\r\n    console.error(\"Error Creating Subreddit:\", error);\r\n    res.status(500).send(error.message);\r\n  }\r\n});\r\n\r\napp.post(\"/create-post\", authenticateToken, async (req, res) => {\r\n  try {\r\n    const { title, content } = req.body;\r\n    const post = new Post({ title, content, author: req.user._id });\r\n    await post.save();\r\n    res.status(201).json(post);\r\n  } catch (error) {\r\n    res.status(500).send(error.message);\r\n  }\r\n});\r\n\r\napp.post(\"/create-post/:subredditId\", authenticateToken, async (req, res) => {\r\n  try {\r\n    const subredditId = req.params.subredditId;\r\n    const subreddit = await Subreddit.findById(subredditId);\r\n    if (!subreddit) return res.status(404).send(\"Subreddit not found\");\r\n\r\n    const { title, content } = req.body;\r\n    const post = new Post({ title, content, author: req.user._id });\r\n    await post.save();\r\n\r\n    subreddit.posts.push(post._id);\r\n    await subreddit.save();\r\n\r\n    res.status(201).json(post);\r\n  } catch (error) {\r\n    res.status(500).send(error.message);\r\n  }\r\n});\r\n\r\napp.delete(\r\n  \"/delete-subreddit/:subredditId\",\r\n  authenticateToken,\r\n  async (req, res) => {\r\n    try {\r\n      const subredditId = req.params.subredditId;\r\n      const subreddit = await Subreddit.findOne({\r\n        _id: subredditId,\r\n        moderators: req.user._id,\r\n      });\r\n      if (!subreddit) return res.sendStatus(403);\r\n\r\n      await Post.deleteMany({ _id: { $in: subreddit.posts } });\r\n      await Comment.deleteMany({ post: { $in: subreddit.posts } });\r\n      await Subreddit.deleteOne({ _id: subredditId });\r\n\r\n      res.sendStatus(200);\r\n    } catch (error) {\r\n      res.status(500).send(error.message);\r\n    }\r\n  }\r\n);\r\n\r\napp.put(\"/edit-post/:postId\", authenticateToken, async (req, res) => {\r\n  try {\r\n    const postId = req.params.postId;\r\n    const post = await Post.findOne({ _id: postId, author: req.user._id });\r\n    if (!post) return res.sendStatus(403);\r\n\r\n    post.title = req.body.title;\r\n    post.content = req.body.content;\r\n    await post.save();\r\n\r\n    res.sendStatus(200);\r\n  } catch (error) {\r\n    res.status(500).send(error.message);\r\n  }\r\n});\r\n\r\napp.delete(\"/delete-post/:postId\", authenticateToken, async (req, res) => {\r\n  try {\r\n    const postId = req.params.postId;\r\n    const post = await Post.findOne({ _id: postId, author: req.user._id });\r\n    if (!post) return res.sendStatus(403);\r\n\r\n    await Comment.deleteMany({ post: postId });\r\n    await post.remove();\r\n\r\n    res.sendStatus(200);\r\n  } catch (error) {\r\n    res.status(500).send(error.message);\r\n  }\r\n});\r\n\r\napp.post(\"/create-comment/:postId\", authenticateToken, async (req, res) => {\r\n  try {\r\n    const postId = req.params.postId;\r\n    const post = await Post.findById(postId);\r\n    if (!post) return res.status(404).send(\"Post not found\");\r\n\r\n    const comment = new Comment({\r\n      content: req.body.content,\r\n      author: req.user._id,\r\n      post: postId,\r\n    });\r\n\r\n    await comment.save();\r\n    post.comments.push(comment._id);\r\n    await post.save();\r\n\r\n    res.status(201).json(comment);\r\n  } catch (error) {\r\n    res.status(500).send(error.message);\r\n  }\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Serveur en écoute sur le port ${PORT}`);\r\n});\r\n","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");"],"sourceRoot":""}